{
  "cve": "CVE-2025-59241",
  "name": "",
  "description": "Improper link resolution before file access ('link following') in Windows Health and Optimized Experiences Service allows an authorized attacker to elevate privileges locally.",
  "requiredaction": "",
  "epss_score": 0.00055,
  "metrics": {
    "cvssv2": {
      "basescore": 0.0,
      "acessvector": null
    },
    "cvssv30": {
      "basescore": 0.0,
      "attackvector": null
    },
    "cvssv31": {
      "basescore": 7.8,
      "attackvector": "LOCAL"
    },
    "cvssv40": {
      "basescore": 0.0,
      "attackvector": null
    }
  },
  "weaknesses": [
    {
      "CWE-59": {
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource."
      }
    }
  ],
  "attackpattern": [
    {
      "CAPEC-132": {
        "name": "Symlink Attack",
        "description": "An adversary positions a symbolic link in such a manner that the targeted user or application accesses the link's endpoint, assuming that it is accessing a file with the link's name."
      }
    },
    {
      "CAPEC-17": {
        "name": "Using Malicious Files",
        "description": "An attack of this type exploits a system's configuration that allows an adversary to either directly access an executable file, for example through shell access; or in a possible worst case allows an adversary to upload a file and then execute it. Web servers, ftp servers, and message oriented middleware systems which have many integration points are particularly vulnerable, because both the programmers and the administrators must be in synch regarding the interfaces and the correct privileges for each interface."
      }
    },
    {
      "CAPEC-35": {
        "name": "Leverage Executable Code in Non-Executable Files",
        "description": "An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high."
      }
    },
    {
      "CAPEC-76": {
        "name": "Manipulating Web Input to File System Calls",
        "description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible."
      }
    }
  ],
  "exploit": [],
  "published": "2025-10-14T17:16:06"
}