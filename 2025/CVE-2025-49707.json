{
  "cve": "CVE-2025-49707",
  "name": "",
  "description": "Improper access control in Azure Virtual Machines allows an authorized attacker to perform spoofing locally.",
  "requiredaction": "",
  "epss_score": 0.00057,
  "metrics": {
    "cvssv2": {
      "basescore": 0.0,
      "acessvector": null
    },
    "cvssv30": {
      "basescore": 0.0,
      "attackvector": null
    },
    "cvssv31": {
      "basescore": 7.9,
      "attackvector": "LOCAL"
    },
    "cvssv40": {
      "basescore": 0.0,
      "attackvector": null
    }
  },
  "weaknesses": [
    {
      "CWE-284": {
        "name": "Improper Access Control",
        "description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor."
      }
    }
  ],
  "attackpattern": [
    {
      "CAPEC-19": {
        "name": "Embedding Scripts within Scripts",
        "description": "An adversary leverages the capability to execute their own script by embedding it within other scripts that the target software is likely to execute due to programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts."
      }
    },
    {
      "CAPEC-441": {
        "name": "Malicious Logic Insertion",
        "description": "An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain."
      }
    },
    {
      "CAPEC-478": {
        "name": "Modification of Windows Service Configuration",
        "description": "An adversary exploits a weakness in access control to modify the execution parameters of a Windows service. The goal of this attack is to execute a malicious binary in place of an existing service."
      }
    },
    {
      "CAPEC-479": {
        "name": "Malicious Root Certificate",
        "description": "An adversary exploits a weakness in authorization and installs a new root certificate on a compromised system. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials."
      }
    },
    {
      "CAPEC-502": {
        "name": "Intent Spoof",
        "description": "An adversary, through a previously installed malicious application, issues an intent directed toward a specific trusted application's component in an attempt to achieve a variety of different objectives including modification of data, information disclosure, and data injection. Components that have been unintentionally exported and made public are subject to this type of an attack. If the component trusts the intent's action without verififcation, then the target application performs the functionality at the adversary's request, helping the adversary achieve the desired negative technical impact."
      }
    },
    {
      "CAPEC-503": {
        "name": "WebView Exposure",
        "description": "An adversary, through a malicious web page, accesses application specific functionality by leveraging interfaces registered through WebView's addJavascriptInterface API. Once an interface is registered to WebView through addJavascriptInterface, it becomes global and all pages loaded in the WebView can call this interface."
      }
    },
    {
      "CAPEC-536": {
        "name": "Data Injected During Configuration",
        "description": "An attacker with access to data files and processes on a victim's system injects malicious data into critical operational data during configuration or recalibration, causing the victim's system to perform in a suboptimal manner that benefits the adversary."
      }
    },
    {
      "CAPEC-546": {
        "name": "Incomplete Data Deletion in a Multi-Tenant Environment",
        "description": "An adversary obtains unauthorized information due to insecure or incomplete data deletion in a multi-tenant environment. If a cloud provider fails to completely delete storage and data from former cloud tenants' systems/resources, once these resources are allocated to new, potentially malicious tenants, the latter can probe the provided resources for sensitive information still there."
      }
    },
    {
      "CAPEC-550": {
        "name": "Install New Service",
        "description": "When an operating system starts, it also starts programs called services or daemons. Adversaries may install a new service which will be executed at startup (on a Windows system, by modifying the registry). The service name may be disguised by using a name from a related operating system or benign software. Services are usually run with elevated privileges."
      }
    },
    {
      "CAPEC-551": {
        "name": "Modify Existing Service",
        "description": "When an operating system starts, it also starts programs called services or daemons. Modifying existing services may break existing services or may enable services that are disabled/not commonly used."
      }
    },
    {
      "CAPEC-552": {
        "name": "Install Rootkit ",
        "description": "An adversary exploits a weakness in authentication to install malware that alters the functionality and information provide by targeted operating system API calls. Often referred to as rootkits, it is often used to hide the presence of programs, files, network connections, services, drivers, and other system components."
      }
    },
    {
      "CAPEC-556": {
        "name": "Replace File Extension Handlers",
        "description": "When a file is opened, its file handler is checked to determine which program opens the file. File handlers are configuration properties of many operating systems. Applications can modify the file handler for a given file extension to call an arbitrary program when a file with the given extension is opened."
      }
    },
    {
      "CAPEC-558": {
        "name": "Replace Trusted Executable",
        "description": "An adversary exploits weaknesses in privilege management or access control to replace a trusted executable with a malicious version and enable the execution of malware when that trusted executable is called."
      }
    },
    {
      "CAPEC-562": {
        "name": "Modify Shared File",
        "description": "An adversary manipulates the files in a shared location by adding malicious programs, scripts, or exploit code to valid content. Once a user opens the shared content, the tainted content is executed."
      }
    },
    {
      "CAPEC-563": {
        "name": "Add Malicious File to Shared Webroot",
        "description": "An adversaries may add malicious content to a website through the open file share and then browse to that content with a web browser to cause the server to execute the content. The malicious content will typically run under the context and permissions of the web server process, often resulting in local system or administrative privileges depending on how the web server is configured."
      }
    },
    {
      "CAPEC-564": {
        "name": "Run Software at Logon",
        "description": "Operating system allows logon scripts to be run whenever a specific user or users logon to a system. If adversaries can access these scripts, they may insert additional code into the logon script. This code can allow them to maintain persistence or move laterally within an enclave because it is executed every time the affected user or users logon to a computer. Modifying logon scripts can effectively bypass workstation and enclave firewalls. Depending on the access configuration of the logon scripts, either local credentials or a remote administrative account may be necessary."
      }
    },
    {
      "CAPEC-578": {
        "name": "Disable Security Software",
        "description": "An adversary exploits a weakness in access control to disable security tools so that detection does not occur. This can take the form of killing processes, deleting registry keys so that tools do not start at run time, deleting log files, or other methods."
      }
    }
  ],
  "exploit": [],
  "published": "2025-08-12T18:15:29"
}