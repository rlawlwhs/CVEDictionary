{
  "cve": "CVE-2025-59247",
  "name": "",
  "description": "Azure PlayFab Elevation of Privilege Vulnerability",
  "requiredaction": "",
  "epss_score": 0.00063,
  "metrics": {
    "cvssv2": {
      "basescore": 0.0,
      "acessvector": null
    },
    "cvssv30": {
      "basescore": 0.0,
      "attackvector": null
    },
    "cvssv31": {
      "basescore": 8.8,
      "attackvector": "NETWORK"
    },
    "cvssv40": {
      "basescore": 0.0,
      "attackvector": null
    }
  },
  "weaknesses": [
    {
      "CWE-269": {
        "name": "Improper Privilege Management",
        "description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor."
      }
    },
    {
      "CWE-565": {
        "name": "Reliance on Cookies without Validation and Integrity Checking",
        "description": "The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user."
      }
    }
  ],
  "attackpattern": [
    {
      "CAPEC-122": {
        "name": "Privilege Abuse",
        "description": "An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources."
      }
    },
    {
      "CAPEC-233": {
        "name": "Privilege Escalation",
        "description": "An adversary exploits a weakness enabling them to elevate their privilege and perform an action that they are not supposed to be authorized to perform."
      }
    },
    {
      "CAPEC-58": {
        "name": "Restful Privilege Elevation",
        "description": "An adversary identifies a Rest HTTP (Get, Put, Delete) style permission method allowing them to perform various malicious actions upon server data due to lack of access control mechanisms implemented within the application service accepting HTTP messages."
      }
    },
    {
      "CAPEC-226": {
        "name": "Session Credential Falsification through Manipulation",
        "description": "An attacker manipulates an existing credential in order to gain access to a target application. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. An attacker may be able to manipulate a credential sniffed from an existing connection in order to gain access to a target server."
      }
    },
    {
      "CAPEC-31": {
        "name": "Accessing/Intercepting/Modifying HTTP Cookies",
        "description": "This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information."
      }
    },
    {
      "CAPEC-39": {
        "name": "Manipulating Opaque Client-based Data Tokens",
        "description": "In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation."
      }
    }
  ],
  "exploit": [],
  "published": "2025-10-09T21:15:38"
}